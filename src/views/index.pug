extends ./_includes/layout
include ./_includes/mixins

block variables
  - var template = 'home'

block content
  .home
    .home__wrapper
      .hero__pin(data-animation="pin")
        section.hero
          .hero__text!= prismic.homeHeadingsHTML[0]
          video.hero__video(autoplay muted loop playsinline preload="auto")
            source(src="/reels/background_reel.mp4" type="video/mp4")

      each slice in prismic.home.data.body
        // Tagline Section
        if slice.slice_type === 'tagline_card'
          section.section--large--padding.tagline__card__wrapper
            div.tagline
              h2.tagline__heading(data-animation="fill")= slice.primary.tagline[0].text
              a.button(href='/book/')
                span.button__label= slice.primary.button_label 

        // About Section
        if slice.slice_type === 'about_card'
          section.about__card__wrapper
            div.about__card
              div.about__card__left
                div.image__wrapper
                  - const aboutImage = imgix.imgix(slice.primary.about_image,{ auto:'compress', crop: 'entropy', q:85 }, [400, 665, 1000])
                  img.about__card__image(
                    src=aboutImage.src
                    srcset=aboutImage.srcset
                    sizes="(max-width: 600px) 650px, (max-width: 1440px) 50vw, 700px"
                    alt=aboutImage.alt
                    loading="lazy"
                  )
                +svg-decorative('mint')
              div.about__card__right
                h6.about__card__heading= slice.primary.heading[0].text
                p.h4.about__card__description!= slice.primary.intro_text.replace(/\n/g, '<br>')
                a.button(href='/about/')
                  span.button__label= slice.primary.button_label 

        // Our Food Section
        if slice.slice_type === 'our_food'
          section.section.section--small--padding.food__card__wrapper
            div.food
              div.food__left
                h6.food__heading= slice.primary.heading[0].text
                p.h4.food__description!= slice.primary.intro_text.replace(/\n/g, '<br>')
                a.button(href='/menu/')
                  span.button__label= slice.primary.button_label
              div.food__right
                div.image__wrapper
                  each item, index in slice.items
                    - const sliderImage = imgix.imgix(item.slider_image, { auto:'compress', crop:'entropy', q:85 }, [400, 665, 1000])
                    div.slider__image(data-animation="carousel")
                      img.food__image(
                        src=sliderImage.src
                        srcset=sliderImage.srcset
                        sizes="(max-width: 600px) 650px, (max-width: 1440px) 50vw, 700px"
                        alt=sliderImage.alt
                        loading="lazy"
                      )

                div.food__slider__controls
                  button.food__button 
                    span.btn__prev.food__button__label prev 
                  button.food__button 
                    span.btn__next.food__button__label next 
                  div.food__slider__counter 
                    span 1/#{slice.items.length}

                +svg-decorative('rosemary')

        // Private Events Section
        if slice.slice_type === 'private_events_card'
          section.section.section--small--padding.events__card__wrapper(data-animation='scale')
            - const backgroundImage = imgix.imgix(slice.primary.background_image, { auto: 'compress',crop: 'top' }, [400, 600, 800,1200])
            div.events(
              style=`background-image: url('${backgroundImage.src}'); background-size: cover; background-position:center;`
              data-srcset=backgroundImage.srcset
            )
              div.events__content
                h2.events__heading= slice.primary.heading[0].text
                p.events__description= slice.primary.intro_text
                a.events__button(href='/book/')
                  span.button__label.events__button__label= slice.primary.button_label

    // Reviews Section 
    section.section--xtiny--padding.reviews(data-animation='reviews_slider')
      div.reviews__wrapper
        div.reviews__track
            div.reviews__quote__wrapper 
              span.reviews__quote  &ldquo; 
            div.reviews__slider
              if google_reviews.length
                each review, index in google_reviews
                  div.reviews__slide
                    div.reviews__item
                      h3.reviews__text= review.text
                      h6.reviews__name - #{review.author_name}
              else
                div.reviews__item.--active
                  h3.reviews__text No reviews found yet.
                  h6.reviews__name -

        div.reviews__dots
          if google_reviews.length
            each review, index in google_reviews
              button.reviews__dot(class=(index === 0 ? '--active' : ''))





    // FAQ Section
    each slice in prismic.home.data.body
      if slice.slice_type === 'faq_card'
        section.faq__section.section--small--padding
          .faq
            .faq__container
              h2.faq__heading= slice.primary.heading[0].text
              dl.faq__accordian
                each item in slice.items
                  div.faq__item
                    button.faq__question(data-animation="faq")
                      dt.faq__question__text
                        span= item.question
                      svg.faq__icon(
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 22 23"
                        height="23"
                        width="22"
                        )
                        path(
                          fill="black"
                          d="M0.261719 12.4793V10.8271H10.1748V0.914062H11.8269V10.8271H21.74V12.4793H11.8269V22.3923H10.1748V12.4793H0.261719Z"
                        )
                    dd.faq__answer= item.answer
                    .faq__line
          +svg-decorative('seed_plant')
          +svg-decorative('wheat_plant')

    include ./_includes/marquee
